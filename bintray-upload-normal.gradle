apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar) {
    from sourceSets.main.java
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

javadoc {
    options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar, sourcesJar
}

Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} else if (project.rootProject.file('gradle-local.properties').exists()) {
    properties.load(project.rootProject.file('gradle-local.properties').newDataInputStream())
} else {
    properties.load(project.rootProject.file('gradle.properties').newDataInputStream())
}

def pomConfig = {
    licenses {
        license {
            name LICENSE_NAME
            url LICENSE_URL
            distribution LICENSE_DISTRIBUTION
        }
    }
    developers {
        developer {
            id DEVELOPER_ID
            name DEVELOPER_NAME
            email DEVELOPER_EMAIL
        }
    }

    scm {
        url PROJECT_VCS_URL
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId PUBLISHED_GROUP_ID
            artifactId PUBLISHED_ARTIFACT_ID
            version PUBLISHED_VERSION
            pom.withXml {
                def root = asNode()
                root.appendNode('description', PROJECT_DESCRIPTION)
                root.appendNode('name', PROJECT_NAME)
                root.appendNode('url', PROJECT_WEBSITE_URL)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.key")
    configurations = ['archives']
//    publications = ['maven']
    publish = BINTRAY_PUBLISH
    override = BINTRAY_OVERRIDE
    dryRun = BINTRAY_DRY_RUN
    pkg {
        userOrg = properties.getProperty("bintray.org")
        repo = BINTRAY_REPO
        name = BINTRAY_NAME
        desc = PROJECT_DESCRIPTION
        labels = PROJECT_LABELS
        websiteUrl = PROJECT_WEBSITE_URL
        vcsUrl = PROJECT_VCS_URL
        issueTrackerUrl = PROJECT_ISSUE_TRACKER_URL
        licenses = ALL_LICENSES
        publicDownloadNumbers = true
        version {
            name = PUBLISHED_VERSION
            released  = new Date()
            vcsTag = PUBLISHED_VCS_TAG
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
            mavenCentralSync {
                sync = MCS_ENABLED
                user = properties.getProperty("bintray.oss.user")
                password = properties.getProperty("bintray.oss.password")
                close = MCS_CLOSE
            }
        }
    }
}
